/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.mycompany.googlebis.view;

import com.mycompany.googlebis.beans.IndexationBean;
import com.mycompany.googlebis.controller.GoogleController;
import java.util.SortedSet;
import javax.swing.DefaultListModel;

/**
 * @author Marjorie
 */
public class GoogleFrame extends javax.swing.JFrame {

    private final GoogleController googleController;
    
    /**
     * Creates new form GoogleFrame
     * @param googleController
     */
    public GoogleFrame(GoogleController googleController) {
        initComponents();
        resultModel = new DefaultListModel();
        resultsList.setModel(resultModel);
        this.googleController = googleController;
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        list1 = new java.awt.List();
        storeCorpusButton = new javax.swing.JButton();
        requestText = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        requestLabel = new javax.swing.JLabel();
        precisionLabelPart1 = new javax.swing.JLabel();
        precisionText = new javax.swing.JTextField();
        precisionLabelPart2 = new javax.swing.JLabel();
        validateButton = new javax.swing.JButton();
        evaluationText = new javax.swing.JTextField();
        corpusInfo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultsList = new javax.swing.JList();
        useSemanticVersion = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        storeCorpusButton.setText("Store Corpus");
        storeCorpusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeCorpusButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        requestLabel.setText("Request");

        precisionLabelPart1.setText("Precision at ");

        precisionLabelPart2.setText("words");

        validateButton.setText("Evaluate");
        validateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validateButtonActionPerformed(evt);
            }
        });

        evaluationText.setEditable(false);

        corpusInfo.setEditable(false);

        jScrollPane2.setViewportView(resultsList);

        useSemanticVersion.setText("use Semantic version");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(requestLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(evaluationText, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(storeCorpusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(corpusInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(useSemanticVersion))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(precisionLabelPart1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(precisionText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(precisionLabelPart2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(validateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(requestText, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestText, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(requestLabel)
                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(useSemanticVersion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precisionLabelPart1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(precisionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(precisionLabelPart2)
                    .addComponent(validateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(evaluationText, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(storeCorpusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(corpusInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String request = requestText.getText();
        if(request != null && !request.isEmpty()) {
            evaluationText.setText("");
            precisionText.setText("");
            resultModel = new DefaultListModel();
            if("Q1".compareTo(request) <= 0 && "Q9".compareTo(request) >= 0) {
                boolean useSV = useSemanticVersion.isSelected();
                System.out.println("searching request " + request);
                SortedSet<IndexationBean> results = googleController.recoverRequestDocument(request, useSV);
                System.out.println("documents found");
                if(results.isEmpty()) {
                    resultModel.addElement("No document found");
                } else {
                    for(IndexationBean index: results) {
                        resultModel.addElement(index.getDocumentName());
                    }
                }
            } else {
               resultModel.addElement("request : " + requestText  + " not understood");
            }
            resultsList.setModel(resultModel);
        }   
    }//GEN-LAST:event_searchButtonActionPerformed

    private void validateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validateButtonActionPerformed
        String precision = precisionText.getText();
        if(precision != null) {
            Double result = googleController.evaluateResultsPrecision(Integer.parseInt(precision));
            evaluationText.setText(result.toString());
        }
    }//GEN-LAST:event_validateButtonActionPerformed

    private void storeCorpusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeCorpusButtonActionPerformed
        corpusInfo.setText("Storing Corpus");
        googleController.storeCorpus();
        corpusInfo.setText("Corpus Stored");
    }//GEN-LAST:event_storeCorpusButtonActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField corpusInfo;
    private javax.swing.JTextField evaluationText;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.List list1;
    private javax.swing.JLabel precisionLabelPart1;
    private javax.swing.JLabel precisionLabelPart2;
    private javax.swing.JTextField precisionText;
    private javax.swing.JLabel requestLabel;
    private javax.swing.JTextField requestText;
    private javax.swing.JList resultsList;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton storeCorpusButton;
    private javax.swing.JCheckBox useSemanticVersion;
    private javax.swing.JButton validateButton;
    // End of variables declaration//GEN-END:variables
    private javax.swing.DefaultListModel resultModel;
}
